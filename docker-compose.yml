services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  web:
    build: .
    command: bash -c "./wait-for-db.sh db python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file: .env
    depends_on:
      - db
      - redis

  celery_worker:
    build: .
    command: bash -c "./wait-for-db.sh db celery -A alx_backend_caching_property_listings worker --loglevel=info"
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: bash -c "./wait-for-db.sh db celery -A alx_backend_caching_property_listings beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - .:/app
    env_file: .env
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  redis_data:
